{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "type": "string",
            "defaultValue": "hc"
        },
        "tags": {
            "type": "object",
            "defaultValue": {
                "project": "HealthyCountryAI",
                "environment": "dev"
            }
        },
        "addressPrefixes": {
            "type": "array",
            "defaultValue": [
                "10.0.0.0/16"
            ]
        },
        "subnets": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "vm-subnet",
                    "properties": {
                        "addressPrefix": "10.0.0.0/24"
                    }
                },
                {
                    "name": "AzureBastionSubnet",
                    "properties": {
                        "addressPrefix": "10.0.1.0/24"
                    }
                }
            ]
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_DS3_v2"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "localadmin"
        },
        "adminPublicKey": {
            "type": "string",
            "defaultValue": null
        },
        "sqlServerFWClientIpStart": {
            "type": "string",
            "defaultValue": "0.0.0.0"
        },
        "sqlServerFWClientIpEnd": {
            "type": "string",
            "defaultValue": "0.0.0.0"
        },
        "sqlServerAdminLoginName": {
            "type": "string",
            "defaultValue": "dbadmin"
        },
        "sqlServerAdminLoginPassword": {
            "type": "string",
            "defaultValue": "M1cr0soft123456789"
        },
        "containerNames": {
            "type": "array"
        },
        "imageResizeHeight": {
            "type": "int",
            "defaultValue": 768
        },
        "imageResizeWidth": {
            "type": "int",
            "defaultValue": 1024
        }
    },
    "variables": {
        "suffix": "[substring(replace(guid(resourceGroup().id), '-', ''), 0, 6)]",
        "keyVaultName": "[concat(parameters('prefix'), '-kv-', variables('suffix'))]",
        "vmName": "[concat(parameters('prefix'), '-vm-', variables('suffix'))]",
        "nicName": "[concat(parameters('prefix'), '-nic-', variables('suffix'))]",
        "vnetName": "[concat(parameters('prefix'), '-vnet-', variables('suffix'))]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "bastionName": "[concat(parameters('prefix'), '-bas-', variables('suffix'))]",
        "bastionPipName": "[concat(parameters('prefix'), '-bas-pip-', variables('suffix'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnets')[0].name)]",
        "bastionSubnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnets')[1].name)]",
        "dataStorageAccountName": "[concat('stordata', variables('suffix'))]",
        "functionStorageAccountName": "[concat('storfn', variables('suffix'))]",
        "planName": "[concat(parameters('prefix'), '-plan-', variables('suffix'))]",
        "functionAppName": "[concat(parameters('prefix'), '-fnapp-', variables('suffix'))]",
        "cvTrainingAccountName": "[concat(parameters('prefix'), '-cv-train-', variables('suffix'))]",
        "cvPredictionAccountName": "[concat(parameters('prefix'), '-cv-predict-', variables('suffix'))]",
        "appInsightsName": "[concat(parameters('prefix'), '-ai-', variables('suffix'))]",
        "acrName": "[concat(parameters('prefix'), 'acr', variables('suffix'))]",
        "amlWorkspaceName": "[concat(parameters('prefix'), '-aml-', variables('suffix'))]",
        "dockerContainerName": "mcr.microsoft.com/azure-functions/python:2.0-python3.6-appservice",
        "sqlServerName": "[concat(parameters('prefix'), '-sqlsrv-', variables('suffix'))]",
        "sqlDbName": "[concat(parameters('prefix'), '-sqldb-', variables('suffix'))]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2018-02-14",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "tenantId": "[subscription().tenantId]",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny"
                },
                "accessPolicies": [
                ],
                "sku": {
                    "name": "standard",
                    "family": "A"
                }
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2015-05-01-preview",
            "name": "[variables('sqlServerName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[parameters('sqlServerAdminLoginName')]",
                "version": "12.0",
                "administratorLoginPassword": "[parameters('sqlServerAdminLoginPassword')]"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(variables('sqlServerName'), '/ClientIp-Rule-1')]",
            "dependsOn": [
                "[variables('sqlServerName')]"
            ],
            "properties": {
                "startIpAddress": "[parameters('sqlServerFWClientIpStart')]",
                "endIpAddress": "[parameters('sqlServerFWClientIpEnd')]"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2017-10-01-preview",
            "name": "[concat(variables('sqlServerName'), '/', variables('sqlDbName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('sqlServerName')]"
            ],
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 5
            },
            "kind": "v12.0,user",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 1073741824,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "readReplicaCount": 0
            }
        },
        {
            "apiVersion": "2019-02-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('bastionPipName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "name": "[variables('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": "[parameters('subnets')]"
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Network/bastionHosts",
            "name": "[variables('bastionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('bastionPipName')]",
                "[variables('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[variables('bastionSubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPipName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('dataStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "accessTier": "Hot"
            }
        },
        {
            "name": "[variables('functionStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('dataStorageAccountName'), '/default/', parameters('containerNames')[copyIndex()])]",
            "copy": {
                "name": "containercopy",
                "count": "[length(parameters('containerNames'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName'))]"
            ]
        },
        {
            "name": "[variables('nicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[variables('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[variables('nicName')]",
                "[variables('dataStorageAccountName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "microsoft-dsvm",
                        "offer": "linux-data-science-vm-ubuntu",
                        "sku": "linuxdsvmubuntu",
                        "version": "latest"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "createOption": "fromImage",
                            "caching": "ReadOnly",
                            "writeAcceleratorEnabled": false,
                            "diskSizeGB": 128
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('dataStorageAccountName'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2017-04-18",
            "name": "[variables('cvTrainingAccountName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "CustomVision.Training",
            "sku": {
                "name": "F0",
                "tier": "Standard"
            },
            "properties": {
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2017-04-18",
            "name": "[variables('cvPredictionAccountName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "CustomVision.Prediction",
            "sku": {
                "name": "F0",
                "tier": "Standard"
            },
            "properties": {
            }
        },
        {
            "name": "[variables('appInsightsName')]",
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
            ],
            "properties": {
                "application_Type": "web"
            }
        },
        {
            "name": "[variables('planName')]",
            "type": "Microsoft.Web/serverFarms",
            "apiVersion": "2019-08-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "functionapp",
            "sku": {
                "tier": "Dynamic",
                "name": "Y1"
            },
            "properties": {
                "reserved": true
            }
        },
        {
            "name": "[variables('functionAppName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "kind": "functionapp,linux",
            "dependsOn": [
                "[variables('planName')]",
                "[variables('appInsightsName')]",
                "[variables('cvTrainingAccountName')]",
                "[variables('cvPredictionAccountName')]",
                "[variables('dataStorageAccountName')]",
                "[variables('functionStorageAccountName')]",
                "[variables('sqlServerName')]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).instrumentationkey]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "HEALTHY_HABITAT_AI_STORAGE_ACCOUNT_NAME",
                            "value": "[variables('dataStorageAccountName')]"
                        },
                        {
                            "name": "HEALTHY_HABITAT_AI_STORAGE_ACCOUNT_KEY",
                            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
                        },
                        {
                            "name": "CUSTOM_VISION_ENDPOINT",
                            "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('cvPredictionAccountName'))).endpoint]"
                        },
                        {
                            "name": "CUSTOM_VISION_TRAINING_KEY",
                            "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('cvTrainingAccountName')), providers('Microsoft.CognitiveServices', 'accounts').apiVersions[0]).key1]"
                        },
                        {
                            "name": "CUSTOM_VISION_PREDICTION_KEY",
                            "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('cvPredictionAccountName')), providers('Microsoft.CognitiveServices', 'accounts').apiVersions[0]).key1]"
                        },
                        {
                            "name": "CUSTOM_VISION_ANIMAL_PROJECT_ID",
                            "value": null
                        },
                        {
                            "name": "CUSTOM_VISION_ANIMAL_ITERATION_NAME",
                            "value": "Iteration2"
                        },
                        {
                            "name": "CUSTOM_VISION_PARRAGRASS_PROJECT_ID",
                            "value": null
                        },
                        {
                            "name": "CUSTOM_VISION_PARRAGRASS_ITERATION_NAME",
                            "value": "Iteration2"
                        },
                        {
                            "name": "IMAGE_RESIZE_HEIGHT",
                            "value": "[parameters('imageResizeHeight')]"
                        },
                        {
                            "name": "IMAGE_RESIZE_WIDTH",
                            "value": "[parameters('imageResizeWidth')]"
                        },
                        {
                            "name": "RESIZE_IMAGES_URL",
                            "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net/api/resize_images')]"
                        },
                        {
                            "name": "CREATE_REGIONS_URL",
                            "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net/api/create_regions')]"
                        },
                        {
                            "name": "SCORE_REGIONS_URL",
                            "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net/api/score_regions')]"
                        },
                        {
                            "name": "SQL_DATABASE",
                            "value": "[variables('sqlDbName')]"
                        },
                        {
                            "name": "SQL_DATABASE_PASSWORD",
                            "value": "[parameters('sqlServerAdminLoginPassword')]"
                        },
                        {
                            "name": "SQL_DATABASE_USERNAME",
                            "value": "[parameters('sqlServerAdminLoginName')]"
                        },
                        {
                            "name": "SQL_SERVER",
                            "value": "[concat(variables('sqlServerName'), '.database.windows.net')]"
                        }
                    ]
                },
                "reserved": true,
                "linuxFxVersion": "[concat('DOCKER|', variables('dockerContainerName'))]"
            }
        },
        {
            "name": "[variables('acrName')]",
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "adminUserEnabled": true
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2019-05-01",
            "name": "[variables('amlWorkspaceName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[variables('dataStorageAccountName')]",
                "[variables('appInsightsName')]",
                "[variables('keyVaultName')]",
                "[variables('acrName')]"
            ],
            "identity": {
                "type": "systemAssigned"
            },
            "properties": {
                "friendlyName": "[variables('amlWorkspaceName')]",
                "keyVault": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "applicationInsights": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', variables('acrName'))]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName'))]"
            }
        }
    ],
    "outputs": {
        "sqlServerName": {
            "type": "string",
            "value": "[variables('sqlServerName')]"
        },
        "sqlDatabaseName": {
            "type": "string",
            "value": "[variables('sqlDbName')]"
        },
        "sqlServerAdminLoginName": {
            "type": "string",
            "value": "[parameters('sqlServerAdminLoginName')]"
        },
        "sqlServerAdminLoginPassword": {
            "type": "string",
            "value": "[parameters('sqlServerAdminLoginPassword')]"
        },
        "functionAppName": {
            "type": "string",
            "value": "[variables('functionAppName')]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[variables('dataStorageAccountName')]"
        }
    }
}